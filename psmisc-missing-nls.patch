--- psmisc-21.4/src/killall.c.orig	2003-09-16 13:00:22.000000000 +0200
+++ psmisc-21.4/src/killall.c	2003-12-11 22:28:24.451617568 +0100
@@ -370,13 +370,13 @@
 static void
 usage_pidof (void)
 {
-  fprintf (stderr, "usage: pidof [ -eg ] name ...\n");
-  fprintf (stderr, "       pidof -V\n\n");
-  fprintf (stderr, "    -e      require exact match for very long names;\n");
-  fprintf (stderr, "            skip if the command line is unavailable\n");
+  fprintf (stderr, _("usage: pidof [ -eg ] name ...\n"));
+  fprintf (stderr, _("       pidof -V\n\n"));
+  fprintf (stderr, _("    -e      require exact match for very long names;\n"));
+  fprintf (stderr, _("            skip if the command line is unavailable\n"));
   fprintf (stderr,
-	   "    -g      show process group ID instead of process ID\n");
-  fprintf (stderr, "    -V      display version information\n\n");
+	   _("    -g      show process group ID instead of process ID\n"));
+  fprintf (stderr, _("    -V      display version information\n\n"));
 }
 
 
@@ -384,25 +384,25 @@
 usage_killall (void)
 {
 #ifdef FLASK_LINUX
-  fprintf(stderr,"Usage: killall [-s sid] [-c context] [ -egiqvw ] [ -signal ] name ...\n");
+  fprintf(stderr,_("Usage: killall [-s sid] [-c context] [ -egiqvw ] [ -signal ] name ...\n"));
 #else  /*FLASK_LINUX*/
-  fprintf (stderr, "usage: killall [ OPTIONS ] [ -- ] name ...\n");
+  fprintf (stderr, _("usage: killall [ OPTIONS ] [ -- ] name ...\n"));
 #endif /*FLASK_LINUX*/
-  fprintf (stderr, "       killall -l, --list\n");
-  fprintf (stderr, "       killall -V --version\n\n");
-  fprintf (stderr, "  -e,--exact          require exact match for very long names\n");
-  fprintf (stderr, "  -g,--process-group  kill process group instead of process\n");
-  fprintf (stderr, "  -i,--interactive    ask for confirmation before killing\n");
-  fprintf (stderr, "  -l,--list           list all known signal names\n");
-  fprintf (stderr, "  -q,--quiet          don't print complaints\n");
-  fprintf (stderr, "  -s,--signal         send signal instead of SIGTERM\n");
-  fprintf (stderr, "  -v,--verbose        report if the signal was successfully sent\n");
-  fprintf (stderr, "  -V,--version        display version information\n");
-  fprintf (stderr, "  -w,--wait           wait for processes to die\n\n");
-#ifdef FLASK_LINUX
-  fprintf (stderr, "  -d,--sid            kill only process(es) having sid\n");
-  fprintf (stderr, "  -c,--context        kill only process(es) having scontext\n");
-  fprintf(stderr, "   (-s, -c are mutually exclusive and must precede other arguments)\n\n");
+  fprintf (stderr, _("       killall -l, --list\n"));
+  fprintf (stderr, _("       killall -V --version\n\n"));
+  fprintf (stderr, _("  -e,--exact          require exact match for very long names\n"));
+  fprintf (stderr, _("  -g,--process-group  kill process group instead of process\n"));
+  fprintf (stderr, _("  -i,--interactive    ask for confirmation before killing\n"));
+  fprintf (stderr, _("  -l,--list           list all known signal names\n"));
+  fprintf (stderr, _("  -q,--quiet          don't print complaints\n"));
+  fprintf (stderr, _("  -s,--signal         send signal instead of SIGTERM\n"));
+  fprintf (stderr, _("  -v,--verbose        report if the signal was successfully sent\n"));
+  fprintf (stderr, _("  -V,--version        display version information\n"));
+  fprintf (stderr, _("  -w,--wait           wait for processes to die\n\n"));
+#ifdef FLASK_LINUX
+  fprintf (stderr, _("  -d,--sid            kill only process(es) having sid\n"));
+  fprintf (stderr, _("  -c,--context        kill only process(es) having scontext\n"));
+  fprintf(stderr, _("   (-s, -c are mutually exclusive and must precede other arguments)\n\n"));
 #endif /*FLASK_LINUX*/
 }
 
@@ -420,11 +420,11 @@
 void print_version()
 {
   fprintf(stderr, "%s (psmisc) %s\n", pidof ? "pidof" : "killall", VERSION);
-  fprintf(stderr, "Copyright (C) 1993-2002 Werner Almesberger and Craig Small\n\n");
-  fprintf(stderr, "PSmisc comes with ABSOLUTELY NO WARRANTY.\n");
-  fprintf(stderr, "This is free software, and you are welcome to redistribute it under the terms\n");
-  fprintf(stderr, "of the GNU General Public License.\n");
-  fprintf(stderr, "For more information about these matters, see the files named COPYING.\n");
+  fprintf(stderr, _("Copyright (C) 1993-2002 Werner Almesberger and Craig Small\n\n"));
+  fprintf(stderr, _("PSmisc comes with ABSOLUTELY NO WARRANTY.\n"));
+  fprintf(stderr, _("This is free software, and you are welcome to redistribute it under the terms\n"));
+  fprintf(stderr, _("of the GNU General Public License.\n"));
+  fprintf(stderr, _("For more information about these matters, see the files named COPYING.\n"));
 }
 
 int
@@ -532,7 +532,7 @@
 
 	  lsid = strtol(optarg, buf, 0);
           if ( **buf ) {
-              (void) fprintf(stderr, "%s: SID (%s) must be numeric\n", name, *argv);
+              (void) fprintf(stderr, _("%s: SID (%s) must be numeric\n"), name, *argv);
               (void) fflush(stderr);
               return( 1 );
           }
--- psmisc-21.4/src/fuser.c.orig	2003-10-08 02:10:47.000000000 +0200
+++ psmisc-21.4/src/fuser.c	2003-12-11 22:24:53.234727416 +0100
@@ -663,7 +663,7 @@
       {
 	if (header && (file->flags & FLAG_VERB))
 	  {
-	    printf ("\n%*s USER        PID ACCESS COMMAND\n", NAME_FIELD, "");
+	    printf (_("\n%*s USER        PID ACCESS COMMAND\n"), NAME_FIELD, "");
 	    header = 0;
 	  }
 	length = 0;
@@ -889,7 +889,7 @@
   address_match = 0;
   for (here = s; here; here = next ? next + 1 : NULL)
     {
-      printf("here: %s\n", here);
+      printf(_("here: %s\n"), here);
       next = strchr (here, ',');
       if (next)
 	*next = 0;
--- psmisc-21.4/src/pstree.c.orig	2003-09-26 15:42:43.000000000 +0200
+++ psmisc-21.4/src/pstree.c	2003-12-11 22:30:22.626652232 +0100
@@ -726,9 +726,9 @@
   fprintf (stderr, _("    -s     show Flask SIDs\n"));
   fprintf (stderr, _("    -x     show Flask security contexts\n"));
 #endif /*FLASK_LINUX*/
-  fprintf (stderr, _("    -U     use UTF-8 (Unicode)) line drawing characters\n"));
+  fprintf (stderr, _("    -U     use UTF-8 (Unicode) line drawing characters\n"));
   fprintf (stderr, _("    -V     display version information\n"));
-  fprintf (stderr, _("    pid    start at pid, default 1 (init))\n"));
+  fprintf (stderr, _("    pid    start at pid, default 1 (init)\n"));
   fprintf (stderr, _("    user   show only trees rooted at processes of that user\n\n"));
   exit (1);
 }
--- psmisc-21.4/src/signals.c.orig	2003-04-03 06:29:21.000000000 +0200
+++ psmisc-21.4/src/signals.c	2003-12-11 22:31:37.258306496 +0100
@@ -8,6 +8,10 @@
 #include <string.h>
 #include <ctype.h>
 #include <signal.h>
+#include <libintl.h>
+#include <locale.h>
+#define _(String) gettext (String)
+
 #include "signals.h"
 
 
@@ -60,6 +64,6 @@
       break;
   if (walk->name)
     return walk->number;
-  fprintf (stderr, "%s: unknown signal; %s -l lists signals.\n", name, cmd);
+  fprintf (stderr, _("%s: unknown signal; %s -l lists signals.\n"), name, cmd);
   exit (1);
 }
--- psmisc-21.4/po/sv.po.orig	2003-12-11 22:32:45.665906960 +0100
+++ psmisc-21.4/po/sv.po	2003-12-11 22:37:34.758958136 +0100
@@ -257,16 +257,16 @@
 msgstr "    -x     visa Flask säkerhetssammanhang\n"
 
 #: src/pstree.c:729
-msgid "    -U     use UTF-8 (Unicode)) line drawing characters\n"
-msgstr "    -U     använd UTF-8 (Unicode)) linjeritningssymboler\n"
+msgid "    -U     use UTF-8 (Unicode) line drawing characters\n"
+msgstr "    -U     använd UTF-8 (Unicode) linjeritningssymboler\n"
 
 #: src/pstree.c:730
 msgid "    -V     display version information\n"
 msgstr "    -V     visa versionsinformation\n"
 
 #: src/pstree.c:731
-msgid "    pid    start at pid, default 1 (init))\n"
-msgstr "    pid    börja vid pid, standardvärde 1 (init))\n"
+msgid "    pid    start at pid, default 1 (init)\n"
+msgstr "    pid    börja vid pid, standardvärde 1 (init)\n"
 
 #: src/pstree.c:732
 msgid ""
